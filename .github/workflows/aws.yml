name: Deploy to Amazon ECS

on:
  push:
    branches: [ main ]

concurrency:
  group: ecs-${{ github.ref }}
  cancel-in-progress: true

env:
  AWS_REGION: ap-southeast-1   # ubah ke ap-southeast-3 kalau pakai Jakarta

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image
        id: build
        env:
          REPO: ${{ secrets.ECR_REPOSITORY }}         # contoh: my-icons
          REGISTRY: ${{ steps.ecr.outputs.registry }} # contoh: 123456789012.dkr.ecr.ap-southeast-1.amazonaws.com
        run: |
          set -e
          IMAGE_TAG=${GITHUB_SHA}
          docker build -t "$REPO:$IMAGE_TAG" .
          docker tag "$REPO:$IMAGE_TAG" "$REGISTRY/$REPO:$IMAGE_TAG"
          docker push "$REGISTRY/$REPO:$IMAGE_TAG"
          echo "IMAGE=$REGISTRY/$REPO:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Write ECS task definition to file
        run: |
          cat > ecs-task.json <<'EOF'
          {
            "family": "my-ecs-task",
            "networkMode": "awsvpc",
            "requiresCompatibilities": ["FARGATE"],
            "cpu": "256",
            "memory": "512",
            "executionRoleArn": "arn:aws:iam::<ACCOUNT_ID>:role/ecsTaskExecutionRole",
            "taskRoleArn": "arn:aws:iam::<ACCOUNT_ID>:role/ecsTaskRole",
            "containerDefinitions": [
              {
                "name": "my-app",
                "image": "dummy/will-be-replaced",
                "portMappings": [
                  { "containerPort": 80, "protocol": "tcp" }
                ],
                "essential": true,
                "logConfiguration": {
                  "logDriver": "awslogs",
                  "options": {
                    "awslogs-group": "/ecs/my-ecs-task",
                    "awslogs-region": "ap-southeast-1",
                    "awslogs-stream-prefix": "ecs"
                  }
                }
              }
            ]
          }
          EOF

      - name: Render task definition
        id: render
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ecs-task.json
          container-name: ${{ secrets.CONTAINER_NAME }}   # contoh: my-app
          image: ${{ steps.build.outputs.IMAGE }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.render.outputs.task-definition }}
          service: ${{ secrets.ECS_SERVICE }}
          cluster: ${{ secrets.ECS_CLUSTER }}
          wait-for-service-stability: true
